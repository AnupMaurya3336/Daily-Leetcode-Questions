485. Max Consecutive Ones
//Input: nums = [1,1,0,1,1,1]
//Output: 3

class Solution {
    public int findMaxConsecutiveOnes(int[] nums) {


        //All code are correct


        // int count=0;
        // int l= nums.length;
        // int [] arr=new int[l];
        // for(int i=0;i<l;i++){
        //     if(nums[i]==1){
        //         count+=1;
        //         arr[i]=count;
        //     }else{
        //         count=0;
        //      arr[i]=count;
        //     }
        // }
        // Arrays.sort(arr);
        // return arr[l-1];


        // int count=0;
        // int l=nums.length;
        // int [] arr=new int[l];
        // int ans = 0;
        // for(int i=0;i<l;i++){
        //     if(nums[i]==1){
        //         count++;
        //         arr[i]=count;
        //     } else {
        //         count=0;
        //         arr[i]=count;
        //     }
        // }
        // count = 0;
        // for(int i = 0; i< l;i++) {
        //     count = Math.max(count, arr[i]);
        // }
        // return count;



        // int count=0;
        // int l=nums.length;
        // int ans = 0;
        // for(int i=0;i<l;i++){
        //     if(nums[i]==1){
        //         count++;
        //     } else {
        //         ans = Math.max(count, ans);
        //         count=0;
        //     }
        // }
        // ans = Math.max(ans, count);
        // return ans;



        // int count=0;
        // int l=nums.length;
        // int ans = 0;
        // for(int i=0;i<l;i++){
        //     if(nums[i]==1){
        //         count++;
        //         ans = Math.max(count, ans);
        //     } else {
        //         count=0;
        //     }
        // }
        // return ans;
    }
}
